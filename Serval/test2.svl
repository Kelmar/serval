var foo : int;
var bar : int;
var baz : int;

foo = 5;
bar = (string)(int)(0x20 + -foo * !(5.5 + 10.6e4));
baz = bar << 5 + 10;

// Test comment.

/**/
/* **/

/*
 * Attempting a block comment across multiple lines.
 */

baz = foo + /* block */ bar;

var cat : string;
cat = "This is a test -\x20- -\x0020- -\0- \r\n";

const foo : int = 0;
var bar : string = "Hi";

var baz = 1.0f; // Auto typed to float

var r : range = 0..9; // Range type (inclusive)

func doThing()
{
    // Enumeration iteration
    for (var i in list)
    {
    }

    // Standard for loop
    for (var i = 0; i < 100; ++i)
    {
    }

    // While loop
    while (true)
    {
    }

    // Do/While loop
    do
    {
    } while (true);

    // Value test
    var i : int = b ? 0 : 1;
}

interface IGreeter
{
    func greet();
}

class Widget : Sprocket, IGreeter
{
private:
    var m_member : int;
    var m_callback : func () : string;

    func greeting() : string
    {
        return "Hello, World!";
    }

public:
    func init()
    {
        m_callback = greeting;
    }

    func greet()
    {
        print(m_callback());
    }

    var name : string
    {
        get
        {
            return "Bob";
        }
        set
        {
            m_name = value;
        }
    }
}


